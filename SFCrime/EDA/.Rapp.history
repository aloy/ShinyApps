x = 1:10
var = x
class(var) == 'numeric'
class(var)
class(var) == 'numeric' | class(var) == 'integer'
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1))#
			pie(table(var1))#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2))#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
df.sf_crime
df.sf_crime <- read.csv("SFPD.csv")
df.sf_crime <- read.csv("./SFPD.csv")
df.sf_crime <- read.csv("../SFPD.csv")
graphvar('univariate',df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex= .5)#
			pie(table(var1),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2))#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('Category')])
barplot(table(var1),las = 2,cex.names= .5)
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5)#
			pie(table(var1),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2))#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2))#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('Category')])
?pie
sort(table(var1))
graphvar('univariate',df.sf_crime[,c('DayOfWeek')])
graphvar('univariate',df.sf_crime[,c('Time')])
head(df.sf_crime)
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
graphvar('univariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2),cex=.5,col=rainbow(length(levels(var1))))#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			par(mfrow=c(1,2))#
			mosaicplot(table(var1,var2),cex=.5,col=rainbow(length(levels(var1))),las=2)#
			barplot(table(var1,var2),beside=TRUE)#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var1)) > length(levels(var2))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var1)) > length(levels(var2))){#
			cols = rainbow(length(levels(var1)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var2)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var1)) > length(levels(var2))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(var1),order(var2)],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(var1),order(var2)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(var2),order(var1)],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(var1),order(var2)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])[order(df.sf_crime[,c('PdDistrict')])]
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])[order(df.sf_crime[,c('PdDistrict')]),]
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])[order(table(sf.sf_crime[,c('PdDistrict')])),]
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])[order(table(df.sf_crime[,c('PdDistrict')])),]
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var2)),order(table(var1))],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(var1),order(var2)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
table(df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])[order(table(df.sf_crime[,c('PdDistrict')])),]
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1)),order(table(var2))],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(var1),order(var2)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
?order
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),order(table(var2),decreasing=TRUE)],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),order(table(var1),decreasing=TRUE)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
?order
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[,order(table(var2),decreasing=TRUE)],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[,order(table(var1),decreasing=TRUE)],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5)#
			pie(sort(table(var1)),cex= .5)#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1)#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('multivariate',df.sf_crime[,c('PdDistrict')],df.sf_crime[,c('Category')])
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
?pie
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50))#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[sample(1:50,5)])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=4),seq(2,50,by=4)])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=4),seq(2,50,by=4))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'multivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime[,c('PdDistrict')])
df.sf_crime$Time
strsplit(as.character(df.sf_crime$Time),":")
apply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(paste(v[1],'.',v[2],sep=''))})
sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(paste(v[1],'.',v[2],sep=''))})
df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(paste(v[1],'.',v[2]/60,sep=''))})
df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(paste(v[1],'.',as.numeric(v[2])/60,sep=''))})
warnings()
df.sf_crime$Times
tmpe <- strsplit(as.character(df.sf_crime$Time[1:10]),":")
df.sf_crime <- read.csv("../SFPD.csv")
tmp <- strsplit(as.character(df.sf_crime$Time[1:10]),":")
tmp
sapply(tmp,function(v){ as.numeric(paste(v[1],'.',as.numeric(v[2])/60,sep=''))}))
sapply(tmp,function(v){ as.numeric(paste(v[1],'.',as.numeric(v[2])/60,sep=''))})
tmp[[1]]
v = tmp[[1]]
as.numeric(v[2])
as.numeric(v[2])/60
as.numeric(v[1])+as.numeric(v[2])/60
sapply(tmp,function(v){ as.numeric(v[1])+as.numeric(v[2])/60})
df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })
df.sf_crime$Times
hist(df.sf_crime$Times)
hist(df.sf_crime$Times,breaks=seq(-0.5,24.5,by=1))
hist(df.sf_crime$Times,breaks=seq(0,24,by=1))
df.sf_crime$Date
substr(df.sf_crime$Date,1,2)
month.names
month.name
month.name[as.numeric(substr(df.sf_crime$Date,1,2))]
df.sf_crime$Month <- month.name[as.numeric(substr(df.sf_crime$Date,1,2))]
class(df.sf_crime$Month)
df.sf_crime$Month <- as.factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))])
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
df.sf_crime$Month <- as.factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))])#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('univariate',df.sf_crime$Category)
graphvar('univariate',df.sf_crime$Month)
graphvar('univariate',df.sf_crime$Times)
graphvar('univariate',df.sf_crime$SfDistrict)
graphvar('univariate',df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- as.factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))])#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 10 | length(levels(var2)) > 10 ){#
		if(length(levels(var1)) > 10 ){#
			topct <- head(row.names(sort(var1,descreasing=TRUE)),10)#
			var1 = var1[var1 %in%  topct]#
			var2 = var2[var1 %in%  topct]#
		}#
		if(length(levels(var2)) > 10 ){#
			topct <- head(row.names(sort(var2,descreasing=TRUE)),10)#
			var1 = var1[var2 %in%  topct]#
			var2 = var2[var2 %in%  topct]#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)#
graphvar('univariate',df.sf_crime$Month)#
graphvar('univariate',df.sf_crime$Times)#
graphvar('univariate',df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)#
#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
type = 'univariate'
var1 = df.sf_crime$Category
length(levels(var1)) > 10
length(levels(var1)) > 10 | length(levels(var2)) > 10
var2 = NULL
length(levels(var1)) > 10
sort(table(var1),descreasing=TRUE)
sort(table(var1))
row.names(sort(table(var1)))
topct <- tail(row.names(sort(table(var1))),10)
var1[var1 %in%  topct]
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- as.factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))])#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 10 | length(levels(var2)) > 10 ){#
		if(length(levels(var1)) > 10 ){#
			topct <- tail(row.names(sort(table(var1))),10)#
			var1 = var1[var1 %in%  topct]#
			var2 = var2[var1 %in%  topct]#
		}#
		if(length(levels(var2)) > 10 ){#
			topct <- tail(row.names(sort(table(var2))),10)#
			var1 = var1[var2 %in%  topct]#
			var2 = var2[var2 %in%  topct]#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)#
graphvar('univariate',df.sf_crime$Month)#
graphvar('univariate',df.sf_crime$Times)#
graphvar('univariate',df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)#
#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
graphvar('univariate',df.sf_crime$Category)
levels(NULL)
levels(df.sf_crime$Times)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 10 | length(levels(var2)) > 10 ){#
		if(length(levels(var1)) > 10 ){#
			topct <- tail(row.names(sort(table(var1))),10)#
			var1 = factor(var1[var1 %in%  topct])#
			var2 = var2[var1 %in%  topct]#
		}#
		if(length(levels(var2)) > 10 ){#
			topct <- tail(row.names(sort(table(var2))),10)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct])#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var1 = factor(var1[var1 %in%  topct])#
			var2 = var2[var1 %in%  topct]#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct])#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)
graphvar('univariate',df.sf_crime$Month)
graphvar('univariate',df.sf_crime$Times)
graphvar('univariate',df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
var2=df.sf_crime$Month
length(levels(var1)) > 20 | length(levels(var2)) > 20
length(levels(var1)) > 20
topct <- tail(row.names(sort(table(var1))),20)
var1 = factor(var1[var1 %in%  topct])#
			var2 = var2[var1 %in%  topct]
table(var1,var2)
lenght(var1)
length(var1)
length(var2)
var2=df.sf_crime$Month
var1 = df.sf_crime$Category
topct <- tail(row.names(sort(table(var1))),20)
var1 %in%  topct
var1 = factor(var1[var1 %in%  topct])#
			var2 = var2[var1 %in%  topct]
length(var1)
length(var2)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct])#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct])#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2)[order(table(var1),decreasing=TRUE),],cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1)[order(table(var2),decreasing=TRUE),],cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- as.factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))])#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct])#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct])#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(sort(table(var1)),las = 2,cex.names= .5,col='darkblue')#
			pie(sort(table(var1)),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)#
graphvar('univariate',df.sf_crime$Month)#
graphvar('univariate',df.sf_crime$Times)#
graphvar('univariate',df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)#
#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
relevel(df.sf_crime$Month,month.name)
?relevel
levels(df.sf_crime$Month) = month.name
levels(df.sf_crime$Month)
head(df.sf_crime)
df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				boxplot(var1~var2)#
				#foo = tapply(var1,var2,hist)	do densities on top of each other		#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				boxplot(var2~var1)#
				#foo = tapply(var2,var1,hist)			#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)
graphvar('univariate',df.sf_crime$Month)
graphvar('univariate',df.sf_crime$Times)
graphvar('univariate',df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
?hist
var1=df.sf_crime$Times
var2=df.sf_crime$PdDistrict
tmp = hist(var1,plot=FALSE,freq=TRUE)
tmp = hist(var1,plot=FALSE,freq=FALSE)
plot(density(var1),type='n')
tapply(var1,var2,function(v) lines(density(v)))						boxplot(var1~var2)
tapply(var1,var2,function(v) lines(density(v)))
cols = rainbow(length(levels(var2)))
tapply(var1,var2,function(v) lines(density(v)),col=cols)
tapply(var1,var2,function(v) lines(density(v),col=cols))
sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==i]),col=cols[i]))
sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i]))
sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))
density(var1)
density(var1)$y
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				#Add legend#
				boxplot(var1~var2)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				#Add legend#
				boxplot(var2~var1)		#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				legend('topright',legend=levels(var2),lty=1,col=cols)#
				boxplot(var1~var2)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				legend('topright',legend=levels(var1),lty=1,col=cols)#
				boxplot(var2~var1)		#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				par(xpd = TRUE)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(mfrow=c(1,2))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				par(xpd = TRUE,mar=c(5,4,4,5))#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,6))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,6))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]]),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]]),col=cols[i],lwd=2))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
?density
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,6))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,7))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,7))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				lty = rep(1:2,10)#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				lty = rep(1:2,10)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,7))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				lty = rep(1:2,10)#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1:2,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				lty = rep(1:2,10)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1:2,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue')#
			boxplot(var1)#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2)#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2)	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,10))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				lty = rep(1:2,10)#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02))#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1:2,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				lty = rep(1:2,10)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02))	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1:2,col=cols,cex=.5)	#
			}#
		}#
	}#
}
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue',main=' ')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue',main=' ')#
			boxplot(var1,main=' ')#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2,main=' ')#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2,main=' ')	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,10))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				lty = rep(1:2,10)#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02),main=' ')#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(25,max(density(var2)$y),legend=levels(var2),lty=1:2,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				lty = rep(1:2,10)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02),main=' ')	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1:2,col=cols,cex=.5)	#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)#
graphvar('univariate',df.sf_crime$Month)#
graphvar('univariate',df.sf_crime$Times)#
graphvar('univariate',df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)#
#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
#These need to be in the server file so that they are only run once.#
#df.sf_crime <- read.csv("../SFPD.csv")#
#
#df.sf_crime$Times <- sapply(strsplit(as.character(df.sf_crime$Time),":"),function(v){ as.numeric(v[1])+as.numeric(v[2])/60 })#
#
#df.sf_crime$Month <- factor(month.name[as.numeric(substr(df.sf_crime$Date,1,2))],levels=month.name)#
##########################################################
#
graphvar <- function(type,var1,var2=NULL){#
	if(length(levels(var1)) > 20 | length(levels(var2)) > 20 ){#
		if(length(levels(var1)) > 20 ){#
			topct <- tail(row.names(sort(table(var1))),20)#
			var2 = var2[var1 %in%  topct]#
			var1 = factor(var1[var1 %in%  topct],levels=topct)#
#
		}#
		if(length(levels(var2)) > 20 ){#
			topct <- tail(row.names(sort(table(var2))),20)#
			var1 = var1[var2 %in%  topct]#
			var2 = factor(var2[var2 %in%  topct],levels=topct)#
		}#
	}#
	if(type == 'univariate'){#
		if(class(var1) == 'factor'){#
			par(mfrow=c(1,2))#
			barplot(table(var1),las = 2,cex.names= .5,col='darkblue',main=' ')#
			pie(table(var1),cex= .5,col=rainbow(50)[c(seq(1,50,by=5),seq(2,50,by=5))])#
		}else{#
			par(mfrow=c(1,2))#
			hist(var1,col='darkblue',main=' ')#
			boxplot(var1,main=' ')#
		}#
	}#
	if(type == 'bivariate'){#
		if(class(var1) == 'factor' & class(var2) == 'factor'){#
			if(length(levels(var2)) > length(levels(var1))){#
			cols = rainbow(length(levels(var2)))#
			mosaicplot(table(var1,var2),cex=.5,col=cols,las=2,main=' ')#
			}else{#
				cols = rainbow(length(levels(var1)))#
				mosaicplot(table(var2,var1),cex=.5,col=cols,las=2,main=' ')	#
			}#
		}else if((class(var1) == 'numeric' | class(var1) == 'integer') & (class(var2) == 'numeric' | class(var2) == 'integer')){#
			plot(var1,var2)#
		}else{#
			par(xpd = TRUE,mar=c(5,4,4,10))#
			if((class(var1) == 'numeric' | class(var1) == 'integer') ){#
				cols = rainbow(length(levels(var2)))#
				lty = rep(1:2,10)#
				plot(density(var1),type='n',ylim = c(0,max(density(var1)$y)+.02),main=' ')#
				sapply(1:length(levels(var2)),function(i) lines(density(var1[var2==levels(var2)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(25,max(density(var1)$y),legend=levels(var2),lty=1:2,col=cols,cex=.5)#
			}#
			if((class(var2) == 'numeric' | class(var2) == 'integer') ){#
				cols = rainbow(length(levels(var1)))#
				lty = rep(1:2,10)#
				plot(density(var2),type='n',ylim = c(0,max(density(var2)$y)+.02),main=' ')	#
				sapply(1:length(levels(var1)),function(i) lines(density(var2[var1==levels(var1)[i]],from=0,to = 24),col=cols[i],lwd=2,lty=lty[i]))#
				legend(27,max(density(var2)$y),legend=levels(var1),lty=1:2,col=cols,cex=.5)	#
			}#
		}#
	}#
}#
#
graphvar('univariate',df.sf_crime$Category)#
graphvar('univariate',df.sf_crime$Month)#
graphvar('univariate',df.sf_crime$Times)#
graphvar('univariate',df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Month)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Category,df.sf_crime$PdDistrict)#
#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$Times)#
graphvar('bivariate',df.sf_crime$Month,df.sf_crime$PdDistrict)#
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
graphvar('bivariate',df.sf_crime$Times,df.sf_crime$PdDistrict)
plot
load("/Users/bcheggeseth/Downloads/NL5kData/NL11.RData")
