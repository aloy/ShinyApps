df.sf_crime <- read.csv("SFPD.csv")
opar <- par()
df_neigh <- spTransform(readOGR(".",'planning_neighborhoods') ,CRS("+proj=longlat +ellps=WGS84"))#
df_water <- spTransform(readOGR(".",'phys_waterbodies') ,CRS("+proj=longlat +ellps=WGS84"))
library(rgdal)#
df_neigh <- spTransform(readOGR(".",'planning_neighborhoods') ,CRS("+proj=longlat +ellps=WGS84"))#
df_water <- spTransform(readOGR(".",'phys_waterbodies') ,CRS("+proj=longlat +ellps=WGS84"))
df_neigh
par(bty='n',yaxt='n',mar=c(7,0,0,0))#
barplot(sort(table(df.sf_crime$Category)),cex.names=.4,las=1)#
popcrime <- tail(names(sort(table(df.sf_crime$Category))),10)
barplot(sort(table(df.sf_crime$Category)),cex.names=.4,las=2)
popcrime <- tail(names(sort(table(df.sf_crime$Category))),10)
table(df.sf_crime$Category
)
sort(table(df.sf_crime$Category)))
sort(table(df.sf_crime$Category))
names(sort(table(df.sf_crime$Category)))
tail(names(sort(table(df.sf_crime$Category))),10)
popcrime <- tail(names(sort(table(df.sf_crime$Category))),10)
par(opar)#
for(i in 1:1){#
  par(bty='n',xaxt='n',yaxt='n',mar=c(0,0,0,0))#
  plot(df_neigh)#
  plot(df_water,add=TRUE,col='lightblue')#
  with(df.sf_crime[df.sf_crime$Category %in% popcrime[i],], points(X,Y,pch = 19,col=rainbow(40,alpha = .5)[Category],cex=.2))#
}
par(opar)#
for(i in 2:2){#
  par(bty='n',xaxt='n',yaxt='n',mar=c(0,0,0,0))#
  plot(df_neigh)#
  plot(df_water,add=TRUE,col='lightblue')#
  with(df.sf_crime[df.sf_crime$Category %in% popcrime[i],], points(X,Y,pch = 19,col=rainbow(40,alpha = .5)[Category],cex=.2))#
}
par(opar)#
for(i in 3:3){#
  par(bty='n',xaxt='n',yaxt='n',mar=c(0,0,0,0))#
  plot(df_neigh)#
  plot(df_water,add=TRUE,col='lightblue')#
  with(df.sf_crime[df.sf_crime$Category %in% popcrime[i],], points(X,Y,pch = 19,col=rainbow(40,alpha = .5)[Category],cex=.2))#
}
par(opar)#
for(i in 4:4){#
  par(bty='n',xaxt='n',yaxt='n',mar=c(0,0,0,0))#
  plot(df_neigh)#
  plot(df_water,add=TRUE,col='lightblue')#
  with(df.sf_crime[df.sf_crime$Category %in% popcrime[i],], points(X,Y,pch = 19,col=rainbow(40,alpha = .5)[Category],cex=.2))#
}
popcrime[i]
subst <- df.sf_crime$Category == 'LARCENY/THEFT'#
#
df_neigh_tmp <- df_neigh#
sp <- SpatialPoints(df.sf_crime[subst,c('X','Y')],CRS("+proj=longlat +ellps=WGS84"))#
spdf <- SpatialPointsDataFrame(sp,df.sf_crime[subst,])#
df_neigh_tmp$crimes <- table(over(spdf,df_neigh_tmp))
n = 5 #Number of categories#
pal <- colorRampPalette(c('white','DarkBlue'))(n+1)[2:(n+1)]#
plot(df_neigh_tmp,col=pal[cut(df_neigh_tmp$crimes,quantile(df_neigh_tmp$crimes,cumsum(c(0,rep(1/n,n)))))])
subst <- df.sf_crime$Category == 'WARRANTS'#
#
df_neigh_tmp <- df_neigh#
sp <- SpatialPoints(df.sf_crime[subst,c('X','Y')],CRS("+proj=longlat +ellps=WGS84"))#
spdf <- SpatialPointsDataFrame(sp,df.sf_crime[subst,])#
df_neigh_tmp$crimes <- table(over(spdf,df_neigh_tmp))#
#
n = 5 #Number of categories#
pal <- colorRampPalette(c('white','DarkBlue'))(n+1)[2:(n+1)]#
plot(df_neigh_tmp,col=pal[cut(df_neigh_tmp$crimes,quantile(df_neigh_tmp$crimes,cumsum(c(0,rep(1/n,n)))))])
x = rep(sample(0:1,m,replace=TRUE),each=n)
##Experiment 1###
#
#Quant outcome linear over time#
#Slope linear function of factor #
#Categorical factor (binary)#
#
n = 10#
m = 100#
#
#Factor#
x = rep(sample(0:1,m,replace=TRUE),each=n)#
#
#Time#
t = rep(1:n, m)
##Experiment 1###
#
#Quant outcome linear over time#
#Slope linear function of factor #
#Categorical factor (binary)#
#
n = 10#
m = 100#
#
#Factor#
x = rep(sample(0:1,m,replace=TRUE),each=n)#
#
#Time#
t = rep(1:n, m) #
#
#Intercept#
b0 = 100 + rep(rnorm(m,sd = 10),each = n)#
#
#Slope#
b1 = 15 + 2*x + rep(rnorm(m,sd = 3),each = n)#
#Outcome#
y = b0 + b1*t + rnorm(n*m, sd = 5)#
#
#ID#
id = rep(1:m,each = n)#
#
require(lattice)#
xyplot(y~t,groups = id,type='l')
mod0 <- lm(y~t*x)
summary(mod0)
require(nlme)
mod1 <- lme(y~t*x,random = ~ t|id)
summary(mod1)
ychange <- unlist(tapply(y,id,function(v){ v - v[1]}))
xyplot(ychange~t,groups = id,type='l')
mod2 <- lm(ychange~t*x)
summary(mod2)
xyplot(ychange~t,groups = id,type='l')
>'2014-01-01T00:00:00'")#
#------------------------------------#
df.sf_crime <- read.csv("SFPD.csv")#
opar <- par()#
#
library(rgdal)#
df_neigh <- spTransform(readOGR(".",'planning_neighborhoods') ,CRS("+proj=longlat +ellps=WGS84"))#
df_water <- spTransform(readOGR(".",'phys_waterbodies') ,CRS("+proj=longlat +ellps=WGS84"))#
#
par(bty='n',yaxt='n',mar=c(7,0,0,0))#
barplot(sort(table(df.sf_crime$Category)),cex.names=.4,las=2)#
popcrime <- tail(names(sort(table(df.sf_crime$Category))),10)
levels(df.sf_crimes)
levels(df.sf_crime)
levels(df.sf_crime$Category)
paste(levels(df.sf_crime$Category))
paste(levels(df.sf_crime$Category),collapse=',')
paste(levels(df.sf_crime$Category),collapse='","')
paste(levels(df.sf_crime$Category),collapse=',')
paste(levels(df.sf_crime$Category),collapse="','")
paste("c('",paste(levels(df.sf_crime$Category),collapse="','"), "')")
paste("c('",paste(levels(df.sf_crime$Category),collapse="','"), "')",sep='')
simpleCap <- function(x) {#
    s <- strsplit(x, " ")[[1]]#
    paste(toupper(substring(s, 1, 1)), substring(s, 2),#
          sep = "", collapse = " ")#
}
simpleCap('lalala')
simpleCap(levels(df.sf_crime$Category))
simpleCap(tolower(levels(df.sf_crime$Category)))
paste("c('",paste(paste(levels(df.sf_crime$Category),'=',levels(df.sf_crime$Category)),collapse="','"), "')",sep='')
paste("'",levels(df.sf_crime$Category),"' = '",levels(df.sf_crime$Category),"'",sep='')
paste(paste("'",levels(df.sf_crime$Category),"' = '",levels(df.sf_crime$Category),"'",sep=''),collapse=',')
paste("list(",paste(paste("'",levels(df.sf_crime$Category),"' = '",levels(df.sf_crime$Category),"'",sep=''),collapse=','), ")",sep='')
head(df.sf_crime)
class(df.sf_crime$Time)
?strsplit
class(df.sf_crime$Date)
df.sf_crime$Date
substr(df.sf_crime$Date,1,2)
strsplit(df.sf_crime$Date,":")
strsplit(as.character(df.sf_crime$Date),":")
strsplit(as.character(df.sf_crime$Time),":")
head(unlist(strsplit(as.character(df.sf_crime$Time),":")))
as.numeric(df.sf_crime$DayOfWeek)
require(RColorBrewer)
df.sf_crime <- read.csv("SFPD.csv")
head(df.sf_crime)
?vector
?as.Date
